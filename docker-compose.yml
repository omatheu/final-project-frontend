version: '3.8'

services:
  # Frontend Next.js
  visagio-frontend:
    build:
      context: ./DEMO
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_RAG_API_URL=http://visagio-rag-api:8000
    depends_on:
      - visagio-rag-api
    restart: unless-stopped
    networks:
      - visagio-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # API RAG
  visagio-rag-api:
    build:
      context: ./RAG
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - DATABASE_PATH=${DATABASE_PATH:-Bases_VAI - oficial real.db}
      - API_TITLE=${API_TITLE:-Visagio RAG API}
      - API_VERSION=${API_VERSION:-1.0.0}
      - MODEL_NAME=${MODEL_NAME:-gemini-2.5-flash}
      - TEMPERATURE=${TEMPERATURE:-0.0}
      - SIMILARITY_THRESHOLD=${SIMILARITY_THRESHOLD:-0.7}
    volumes:
      - ./RAG/Bases_VAI - oficial real.db:/app/Bases_VAI - oficial real.db
      - ./RAG/.env:/app/.env:ro
    restart: unless-stopped
    networks:
      - visagio-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx como proxy reverso (opcional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - visagio-frontend
      - visagio-rag-api
    restart: unless-stopped
    networks:
      - visagio-network
    profiles:
      - production

  # Redis para cache (opcional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - visagio-network
    profiles:
      - production

  # PostgreSQL para dados persistentes (opcional)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: visagio
      POSTGRES_USER: visagio_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-visagio_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - visagio-network
    profiles:
      - production

networks:
  visagio-network:
    driver: bridge

volumes:
  redis_data:
  postgres_data: 